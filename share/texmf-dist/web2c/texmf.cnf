% W32TeX texmf.cnf 
% What follows is a super-summary of what this .cnf file can
% contain. Please read the Kpathsea manual for more information.
% 
% Any identifier (sticking to A-Za-z_ for names is safest) can be assigned.
% The `=' (and surrounding spaces) is optional.
% $foo (or ${foo}) in a value expands to the envvar or cnf value of foo.
% Long lines can be continued with a \.
% 
% Earlier entries (in the same or another file) override later ones, and
% an environment variable foo overrides any texmf.cnf definition of foo.
% 
% All definitions are read before anything is expanded, so you can use
% variables before they are defined. 
% 
% If a variable assignment is qualified with `.PROGRAM', it is ignored
% unless the current executable (last filename component of argv[0]) is
% named PROGRAM.  This foo.PROGRAM construct is not recognized on the
% right-hand side. For environment variables, use FOO_PROGRAM.
% 
% Which file formats use which paths for searches is described in the
% various programs' and the Kpathsea documentation.
% 
% // means to search subdirectories (recursively).
% A leading !! means to look only in the ls-R db, never on the disk.
% A leading/trailing/doubled ; in the paths will be expanded into the
%   compile-time default. Probably not what you want.
%   
% Brace notation is supported, for example: /usr/local/{mytex,othertex}
% expands to /usr/local/mytex:/usr/local/othertex.  You can use the path
% separator as well as the comma for this: /usr/local/{mytex:othertex}
% also expands to /usr/local/mytex:/usr/local/othertex.
% instead of the path separator is deprecated.
%
% The text above assumes thet path separator is a colon (:).  Non-UNIX
% systems use different path separators, like the semicolon (;).

%  Part 1: Search paths and directories.

% You can set an environment variable to override TEXMF if you're testing
% a new TeX tree, without changing anything else.
% 
% You may wish to use one of the $SELFAUTO... variables here so TeX will
% find where to look dynamically.  See the manual and the definition
% below of TEXMFCNF.

% Redistributors will probably want $SELFAUTODIR/share, i.e., /usr/share.
TEXMFROOT = $SELFAUTODIR/share

% The main tree, which must be mentioned in $TEXMF, below:
TEXMFMAIN = $TEXMFROOT/texmf-dist

% A place for local additions to a "standard" texmf tree.  For example:
TEXMFLOCAL = $TEXMFROOT/texmf-local
TEXMFPROJECTS = $TEXMFROOT/texmf-projects

% The main distribution tree:
TEXMFDIST = $TEXMFROOT/texmf-dist

% TEXMFSYSVAR, where *-sys store cached runtime data.
% TEXMFSYSVAR = $TEXMFROOT/texmf-var

% TEXMFSYSCONFIG, where *-sys store configuration data.
% TEXMFSYSCONFIG = $TEXMFROOT/texmf-config

% User texmf trees can be catered for like this...
TEXMFHOME = ~/texmf

%
% W32TeX does not define TEXMFVAR
%
% TEXMFVAR, where texconfig/updmap/fmtutil store cached runtime data.
% TEXMFVAR = ~/w32tex/texmf-var
%

%
% W32TeX does not define TEXMFCONFIG
%
% TEXMFCONFIG, where texconfig/updmap/fmtutil store configuration data.
% TEXMFCONFIG = ~/w32tex2013/texmf-config
%

% List all the texmf trees.
%
%
TEXMF = {$TEXMFHOME,$TEXMFPROJECTS,$TEXMFLOCAL,$TEXMFMAIN}

% Where to look for ls-R files.  There need not be an ls-R in the
% directories in this path, but if there is one, Kpathsea will use it.
% By default, this is only the !! elements of TEXMF, so that mktexlsr
% does not create ls-R files in the non-!! elements -- because if an
% ls-R is present, it will be used, and the disk will not be searched.
% This is arguably a bug in kpathsea.
TEXMFDBS = {$TEXMFPROJECTS,$TEXMFLOCAL,$TEXMFMAIN};$MAKETEXPK_TOP_DIR

% The system trees.  These are the trees that are shared by all the users.
SYSTEXMF = $TEXMFMAIN;$TEXMFLOCAL

% Where generated fonts may be written.  This tree is used when the sources
% were found in a system tree and either that tree wasn't writable, or the
% varfonts feature was enabled in MT_FEATURES in mktex.cnf.
VARTEXFONTS = $TEXMFMAIN/fonts

%
% ConTeXt
%
TEXMFCACHE = $TEXMFROOT/ctxdir

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Usually you will not need to edit any of the other variables in part 1. %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% WEB2C is for Web2C specific files.  The current directory may not be
% a good place to look for them.
WEB2C = $TEXMF/web2c

% TEXINPUTS is for TeX input files -- i.e., anything to be found by \input
% or \openin, including .sty, .eps, etc. 

texroot = $TEXMF/tex
srcinp = $TEXMF/source//

%
% LaTeX2e
TEXINPUTS.latex = .;$texroot/{latex,generic,}//;$srcinp
TEXINPUTS.lualatex = .;$texroot/{lualatex,luatex,latex,generic,}//;$srcinp
TEXINPUTS.luajitlatex = .;$texroot/{lualatex,luajittex,luatex,latex,generic,}//;$srcinp
TEXINPUTS.dvilualatex = .;$texroot/{lualatex,luatex,latex,generic,}//;$srcinp
TEXINPUTS.platex = .;$texroot/{platex,latex,generic,}//;$srcinp
TEXINPUTS.lplatex = .;$texroot/{platex,latex,generic,}//;$srcinp
TEXINPUTS.uplatex = .;$texroot/{uplatex,platex,latex,generic,}//;$srcinp
TEXINPUTS.pdflatex = .;$texroot/{latex,generic,}//;$srcinp
TEXINPUTS.xmltex = .;$texroot/{latex,generic,}//;$srcinp
TEXINPUTS.xelatex = .;$texroot/{xelatex,generic,latex,}//;$srcinp
TEXINPUTS.jlatex = .;$texroot/{jlatex,latex,generic,}//;$srcinp

%
% Fontinst needs to read afm files.
TEXINPUTS.fontinst = .;$TEXMF/{tex,fonts/afm}//;$srcinp

% Plain TeX.  Have the command tex check all directories as a last
% resort, we may have plain-compatible stuff anywhere.
TEXINPUTS.tex = .;$texroot/{plain,generic,}//;$srcinp

% other plain-based formats
TEXINPUTS.ptex = .;$texroot/{ptex,plain,generic,}//;$srcinp
TEXINPUTS.eptex = .;$texroot/{ptex,plain,generic,}//;$srcinp
TEXINPUTS.uptex = .;$texroot/{uptex,ptex,plain,generic,}//;$srcinp
TEXINPUTS.euptex = .;$texroot/{uptex,ptex,plain,generic,}//;$srcinp
TEXINPUTS.pdftex = .;$texroot/{plain,generic,}//;$srcinp
TEXINPUTS.dviluatex = .;$texroot/{luatex,plain,generic,}//;$srcinp
TEXINPUTS.luatex = .;$texroot/{luatex,plain,generic,}//;$srcinp
TEXINPUTS.luajittex = .;$texroot/{luajittex,luatex,plain,generic,}//;$srcinp
TEXINPUTS.xetex = .;$texroot/{xetex,plain,generic,}//;$srcinp
TEXINPUTS.texsis = .;$texroot/{texsis,plain,generic,}//;$srcinp
TEXINPUTS.ptexsis = .;$texroot/{texsis,plain,generic,}//;$srcinp
TEXINPUTS.texinfo = .;$texroot/{texinfo,plain,generic,}//;$srcinp
TEXINPUTS.eplain  = .;$texroot/{eplain,plain,generic,}//;$srcinp
TEXINPUTS.jadetex = .;$texroot/{jadetex,plain,generic,}//;$srcinp
TEXINPUTS.pdfjadetex = .;$texroot/{jadetex,plain,generic,}//;$srcinp
TEXINPUTS.yandytex = .;$texroot/{yandytex,plain,generic,}//;$srcinp
% NTT JTeX
TEXINPUTS.jtex = .;$texroot/{plain,generic,}//;$srcinp

% e-TeX.  This form of the input paths is borrowed from teTeX.  A certain
% variant of TDS is assumed here, unaffected by the build variables.
TEXINPUTS.elatex   = .;$texroot/{latex,generic,}//;$srcinp
TEXINPUTS.etex     = .;$texroot/{plain,generic,}//;$srcinp

% MLTeX.
TEXINPUTS.mltex = .;$texroot/{plain,generic,}//;$srcinp
TEXINPUTS.mllatex = .;$texroot/{latex,generic,}//;$srcinp

% Omega.
TEXINPUTS.lambda = .;$texroot/{lambda,latex,generic,}//;$srcinp
TEXINPUTS.lambdaj = .;$texroot/{lambda,latex,generic,}//;$srcinp
TEXINPUTS.omega = .;$texroot/{plain,generic,}//;$srcinp
TEXINPUTS.omegaj = .;$texroot/{plain,generic,}//;$srcinp

% Aleph
TEXINPUTS.lamed = .;$texroot/{lambda,latex,generic,}//;$srcinp
TEXINPUTS.aleph = .;$texroot/{plain,generic,}//;$srcinp

% Context macros by Hans Hagen:
TEXINPUTS.context = .;$texroot/{context,plain,generic,}//;$srcinp
TEXINPUTS.mptopdf = .;$texroot/{context,plain,generic,}//;$srcinp

% Earlier entries override later ones, so put this last.
TEXINPUTS = .;$texroot/{generic,}//;$srcinp

% Metafont, MetaPost inputs.
MFINPUTS = .;$TEXMF/metafont//;$TEXMF/fonts/source//
MPINPUTS = .;$TEXMF/metapost//

% Web and CWeb input paths.
WEBINPUTS = .;$TEXMF/web//
CWEBINPUTS = .;$TEXMF/cweb//

% Dump files (fmt/base/mem) for vir{tex,mf,mp} to read (see web2c/INSTALL),
% and string pools (.pool) for ini{tex,mf,mp}.  It is silly that we have six
% paths and directories here (they all resolve to a single place by default),
% but historically ...
TEXFORMATS = .;$TEXMF/web2c{/$engine,}
MFBASES = $TEXFORMATS
MPMEMS = $TEXFORMATS

%
% As of 2008, pool files don't exist any more (the strings are compiled
% into the binaries), but just in case something expects to find these:
TEXPOOL = .;$TEXMF/web2c
MFPOOL = ${TEXPOOL}
MPPOOL = ${TEXPOOL}

% Virtual fonts
VFFONTS.pdftex = .;$TEXMF/fonts/vf//
VFFONTS.pdflatex = .;$TEXMF/fonts/vf//
VFFONTS.dvipng = .;$TEXMF/fonts/vf//
VFFONTS.dvips = .;$TEXMF/fonts/vf//;$TEXMF/fonts/vfdev/n2bk
VFFONTS.dvipdfmx = .;$TEXMF/fonts/vf//;$TEXMF/fonts/vfdev/n2bk
%
% default directory for virtual fonts
%
VFFONTS = .;$TEXMF/fonts/vf//
%
% to use unimin.tfm and unigoth.tfm for msmin??.tfm and msgoth??.tfm
%
%%VFFONTS = .;$TEXMF/fonts/{vf,extra/vf}//
%

% Device-independent font metric files.
TFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/tfm//

% The $MAKETEX_MODE below means the drivers will not use a cx font when
% the mode is ricoh.  If no mode is explicitly specified, kpse_prog_init
% sets MAKETEX_MODE to /, so all subdirectories are searched.  See the manual.
% The modeless part guarantees that bitmaps for PostScript fonts are found.
PKFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless}//;$MAKETEXPK_TOP_DIR/pk/{$MAKETEX_MODE,modeless}//

% Similarly for the GF format, which only remains in existence because
% Metafont outputs it (and MF isn't going to change).
GFFONTS = .;$TEXMF/fonts/gf/$MAKETEX_MODE//

% A backup for PKFONTS and GFFONTS. Not used for anything.
GLYPHFONTS = .;$TEXMF/fonts

% For texfonts.map and included map files used by mktexpk.
% See ftp://ftp.tug.org/tex/fontname.tar.gz.
TEXFONTMAPS.dvipdfmx = .;$TEXMF/fonts/map/{agl,dvipdfmx,dvips,pdftex,ttf2pk}//
TEXFONTMAPS = .;$TEXMF/fonts/map/{agl,dvips,pdftex,ps2pk,ttf2pk}//

%
TEXPICTS = .;$texroot/{generic,}//;$srcinp

% BibTeX bibliographies and style files.
BIBINPUTS = .;$TEXMF/{bibtex,pbibtex}/{bib,}//
BSTINPUTS = .;$TEXMF/{bibtex,pbibtex}/{bst,csf}//

% MlBibTeX.
MLBIBINPUTS = .;$TEXMF/bibtex/bib/{mlbib,}//
MLBSTINPUTS = .;$TEXMF/bibtex/{mlbst,bst}//

% .ris and .bltxml bibliography formats.
RISINPUTS = .;$TEXMF/bibtex/ris//
BLTXMLINPUTS = .;$TEXMF/bibtex/bltxml//

% MFT style files.
MFTINPUTS = .;$TEXMF/mft//

% PostScript headers, prologues (.pro), encodings (.enc) and fonts.
TEXPSHEADERS = .;$TEXMF/{dvips,fonts/{enc,type1,type42,type3}}//
TEXPSHEADERS.gsftopk = .;$TEXMF/{fonts/{enc,type1,type3,truetype},dvips}//

% OS font directories
OSFONTDIR = $WINDIR/fonts;c:/usr/sysfonts

% PostScript Type 1 outline fonts.
T1FONTS = .;$TEXMF/fonts/type1//;$OSFONTDIR//

% PostScript AFM metric files.
AFMFONTS = .;$TEXMF/fonts/afm//;$OSFONTDIR//

% TrueType outline fonts.
TTFONTS = .;$TEXMF/fonts/{truetype,opentype}//;$OSFONTDIR//

% Opentype outline fonts.
OPENTYPEFONTS = .;$TEXMF/fonts/{opentype,truetype}//;$OSFONTDIR//

% Type 42 outline fonts.
T42FONTS = .;$TEXMF/fonts/type42//

TTF2PKINPUTS = .;$TEXMF/ttf2pk//
TTF2TFMINPUTS = .;$TEXMF/ttf2pk//

% Ligature definition files.
LIGFONTS = .;$TEXMF/fonts/lig//

% A place to puth everything that doesn't fit the other font categories.
MISCFONTS = .;$TEXMF/fonts/misc//

% Dvips' config.* files (this name should not start with `TEX'!).
TEXCONFIG = $TEXMF/dvips//

% Makeindex style (.ist) files.
INDEXSTYLE = .;$TEXMF/makeindex//
INDEXDICTIONARY.mendex = .;$TEXMF/makeindex//
% Default style
% INDEXDEFAULTSTYLE = $TEXMF/makeindex/gind.ist
% Fixed dictionary
% INDEXDEFAULTDICTIONARY = $TEXMF/makeindex/dict/mendex.dict

% Font encoding files (.enc).
ENCFONTS = .;$TEXMF/fonts/enc//

% CMap files.
CMAPFONTS = .;$TEXMF/fonts/cmap//;c:/usr/Resource/CMap//

% Subfont definition files.
SFDFONTS = .;$TEXMF/fonts/sfd//

% OpenType feature files (.fea).
FONTFEATURES=.;$TEXMF/fonts/fea//

% .cid and .cidmap
FONTCIDMAPS = .;$TEXMF/fonts/cid//

% Pdftex config files:
PDFTEXCONFIG = .;$TEXMF/pdftex/{$progname,}//

% Used by DMP (ditroff-to-mpx), called by makempx -troff.
% W32TeX uses groff
TRFONTS = c:/usr/local/share/groff/font/devps//
MPSUPPORT = .;$TEXMF/metapost/support//

% For xdvi to find mime.types and .mailcap, if they do not exist in
% $HOME.  These are single directories, not paths.
% (But the default mime.types, at least, may well suffice.)
MIMELIBDIR = c:/usr/local/etc
MAILCAPLIBDIR = c:/usr/local/etc

% TeX documentation and source files, for use with kpsewhich.
% Find non-man pages first, better than random in case of conflict.
TEXDOCS = $TEXMF/doc{,/man}//
TEXSOURCES = .;$TEXMF/source//

% Omega-related fonts and other files.  The odd construction for OFMFONTS
% makes it behave in the face of a definition of TFMFONTS.  Unfortunately
% no default substitution would take place for TFMFONTS, so an explicit
% path is retained.
OFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/{ofm,tfm}//;$TFMFONTS
OPLFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/opl//
OVFFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovf//
OVPFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovp//
OTPINPUTS = .;$TEXMF/omega/otp//
OCPINPUTS = .;$TEXMF/omega/ocp//

% Some additional input variables for several programs.  If you add
% a program that uses the 'other text files' or 'other binary files'
% search formats, you'll want to add their variables here as well.

% t4ht utility, sharing files with TeX4ht
T4HTINPUTS   = .;$TEXMF{/tex,}/tex4ht//
TEX4HTINPUTS = .;$TEXMF{/tex,}/tex4ht//

% TeXworks editor configuration and settings
TW_LIBPATH = $TEXMFROOT/texworks/twdata
TW_INIPATH = $TW_LIBPATH

% For security, do not look in . for dvipdfmx.cfg, since the D option
% would allow command execution.
DVIPDFMXINPUTS = $TEXMF/dvipdfmx//

% Lua needs to look in TEXINPUTS for lua scripts distributed with packages.
% 
% But we can't simply use $TEXINPUTS, since then if TEXINPUTS is set in
% the environment with a colon, say, TEXINPUTS=/some/dir:, the intended
% default expansion of TEXINPUTS will not happen and .lua files under
% the /tex/ will not be found.
% 
% So, duplicate the TEXINPUTS.*lualatex values as LUAINPUTS.*lualatex.
% The default LUAINPUTS sufficess for luatex and dviluatex.
%
LUAINPUTS.lualatex = .;$TEXMF/scripts/{$progname,$engine,}/{lua,}//;$TEXMF/tex/{lualatex,latex,luatex,generic,}//
LUAINPUTS.dvilualatex = .;$TEXMF/scripts/{$progname,$engine,}/{lua,}//;$TEXMF/tex/{lualatex,latex,luatex,generic,}//
LUAINPUTS = .;$TEXMF/scripts/{$progname,$engine,}/{lua,}//;$TEXMF/tex/{luatex,plain,generic,}//;$SELFAUTOLOC/lua{/$progname,/$engine,}//

% Lua needs to look for lua libraries distributed with packages.
CLUAINPUTS = .;$SELFAUTOLOC/lib{/$progname,/$engine,}//

% Part for scripts that are distributed/installed in the texmf tree.
TEXMFSCRIPTS = $TEXMF/scripts/{$progname,$engine,}//;$SELFAUTOLOC

% Other languages.
JAVAINPUTS   = .;$TEXMF/scripts/{$progname,$engine,}/java//
PERLINPUTS   = .;$TEXMF/scripts/{$progname,$engine,}/perl//
PYTHONINPUTS = .;$TEXMF/scripts/{$progname,$engine,}/python//
RUBYINPUTS   = .;$TEXMF/scripts/{$progname,$engine,}/ruby//

%% The mktex* scripts rely on KPSE_DOT. Do not set it in the environment.
KPSE_DOT = .

% This definition isn't used from this .cnf file itself (that would be
% paradoxical), but the compile-time default in paths.h is built from it.
% The SELFAUTO* variables are set automatically from the location of
% argv[0], in kpse_set_progname.  
% 
% The TETEXDIR stuff isn't likely to relevant unless you're using teTeX,
% but it doesn't hurt.
%
% For security reasons, it is better not to have . part of the path.
% 
TEXMFCNF = {\
$SELFAUTOLOC,\
$SELFAUTOLOC/share/texmf-local/web2c,\
$SELFAUTOLOC/share/texmf-dist/web2c,\
$SELFAUTOLOC/share/texmf/web2c,\
$SELFAUTOLOC/texmf-local/web2c,\
$SELFAUTOLOC/texmf-dist/web2c,\
$SELFAUTOLOC/texmf/web2c,\
$SELFAUTODIR,\
$SELFAUTODIR/share/texmf-local/web2c,\
$SELFAUTODIR/share/texmf-dist/web2c,\
$SELFAUTODIR/share/texmf/web2c,\
$SELFAUTODIR/texmf-local/web2c,\
$SELFAUTODIR/texmf-dist/web2c,\
$SELFAUTODIR/texmf/web2c,\
$SELFAUTOGRANDPARENT/texmf-local/web2c,\
$SELFAUTOPARENT,\
$SELFAUTOPARENT/share/texmf-local/web2c,\
$SELFAUTOPARENT/share/texmf-dist/web2c,\
$SELFAUTOPARENT/share/texmf/web2c,\
$SELFAUTOPARENT/texmf-local/web2c,\
$SELFAUTOPARENT/texmf-dist/web2c,\
$SELFAUTOPARENT/texmf/web2c\
}

% kpathsea 3.5.3 and later sets these at runtime. To avoid empty
% expansions from binaries linked against an earlier version of the
% library, we set $progname and $engine to something non-empty:
progname = unsetprogname
engine = unsetengine

%  Part 2: Non-path options.
 
% If this option is set to true, `tex a.b' will look first for a.b.tex
% (within each path element), and then for a.b, i.e., we try standard
% extensions first.  If this is false, we first look for a.b and then
% a.b.tex, i.e., we try the name as-is first.
%
% Both names are always tried; the difference is the order in which they
% are tried.  The setting applies to all searches, not just .tex.
%
% This setting only affects names being looked up which *already* have
% an extension.  A name without an extension (e.g., `tex story') will
% always have an extension added first.
%
% The default is true, because we already avoid adding the standard
% extension(s) in the usual cases.  E.g., babel.sty will only look for
% babel.sty, not babel.sty.tex, regardless of this setting.
try_std_extension_first = t

% Enable system commands via \write18{...}.  When enabled fully (set to
% t), obviously insecure.  When enabled partially (set to p), only the
% commands listed in shell_escape_commands are allowed.  Although this
% is not fully secure either, it is much better, and so useful that we
% enable it for everything but bare tex.
shell_escape = p

% No spaces in this command list.
% 
% The programs listed here are as safe as any we know: they either do
% not write any output files, respect openout_any, or have hard-coded
% restrictions similar or higher to openout_any=p.  They also have no
% features to invoke arbitrary other programs, and no known exploitable
% bugs.  All to the best of our knowledge.  They also have practical use
% for being called from TeX.
% 
shell_escape_commands = \
bibtex,pbibtex,jbibtex,repstopdf,epspdf,extractbb,\
makeindex,mendex,mpost,pmpost,upmpost,kpsewhich

% we'd like to allow:
% dvips - but external commands can be executed, need at least -R1.
% epspdf, ps2pdf, pstopdf - need to respect openout_any,
%   and gs -dSAFER must be used and check for shell injection with filenames.
% (img)convert (ImageMagick) - delegates.mgk possible misconfig, besides,
%   without Unix convert it hardly seems worth it, and Windows convert
%   is something completely different that destroys filesystems, so skip.
% pygmentize - but is the filter feature insecure?
% ps4pdf - but it calls an unrestricted latex.
% rpdfcrop - maybe ok, but let's get experience with repstopdf first.
% texindy,xindy - but is the module feature insecure?
% ulqda - but requires optional SHA1.pm, so why bother.
% tex, latex, etc. - need to forbid --shell-escape, and inherit openout_any.

% plain TeX should remain unenhanced.
shell_escape.tex = f
shell_escape.initex = f

% This is used by the Windows script wrapper for restricting searching
% for the purportedly safe shell_escape_commands above to system
% directories.
TEXMF_RESTRICTED_SCRIPTS = \
  {$TEXMFMAIN,$TEXMFLOCAL}/scripts/{$progname,$engine,}//

% Allow TeX \openin, \openout, or \input on filenames starting with `.'
% (e.g., .rhosts) or outside the current tree (e.g., /etc/passwd)?
% a (any)        : any file can be opened.
% r (restricted) : disallow opening "dotfiles".
% p (paranoid)   : as `r' and disallow going to parent directories, and
%                  restrict absolute paths to be under $TEXMFOUTPUT.
openout_any = p
openin_any = a

% Write .log/.dvi/etc. files here, if the current directory is unwritable.
% TEXMFOUTPUT = c:/temp

% If a dynamic file creation fails, log the command to this file, in
% either the current directory or TEXMFOUTPUT.  Set to the
% empty string or  0  to avoid logging.
MISSFONT_LOG = missfont.log

% Set to a colon-separated list of words specifying warnings to suppress.
% To suppress everything, use TEX_HUSH = all; this is currently equivalent to
% TEX_HUSH = checksum:lostchar:readable:special
% To suppress nothing, use TEX_HUSH = none or do not set the variable at all.
TEX_HUSH = none

% Allow TeX, and MF to parse the first line of an input file for
% the %&format construct.
parse_first_line = t

% But don't parse the first line if invoked as "tex", since we want that
% to remain Knuth-compatible.  The src_specials and
% file_line_error_style settings, as well as the options -enctex,
% -mltex, -8bit, etc., also affect this, but they are all off by default.
parse_first_line.tex = f
parse_first_line.initex = f

% Control file:line:error style messages.
file_line_error_style = f

% Enable the mktex... scripts by default?  These must be set to 0 or 1.
% Particular programs can and do override these settings, for example
% dvips's -M option.  Your first chance to specify whether the scripts
% are invoked by default is at configure time.
%
% These values are ignored if the script names are changed; e.g., if you
% set DVIPSMAKEPK to `foo', what counts is the value of the environment
% variable/config value `FOO', not the `MKTEXPK' value.
%
%MKTEXTEX = 0
%MKTEXPK = 1
%MKTEXMF = 1
%MKTEXTFM = 1
%MKTEXFMT = 1
%MKOCP = 0
%MKOFM = 0

% Used by makempx (now internal command) to run TeX. 
% We use "etex" because MetaPost is
% expecting DVI, and not "tex" because we want first line parsing.
TEX = etex
TEX.pmetapost = ptex
TEX.upmetapost = uptex

% These variables specify the external program called for the
% interactive `e' option.  %d is replaced by the line number and %s by
% the current filename.  The default is specified at compile-time, and
% we let that stay in place since different platforms like different values.
% TEXEDIT = texworks --position=%d "%s"
TEXEDIT = mule +%d "%s"
MFEDIT = $TEXEDIT
MPEDIT = $TEXEDIT

%
% guess input encoding in pTeX and its friends if 1. (W32 only)
%
guess_input_kanji_encoding = 1

%
% default file code of JTeX
% These override the code specified by TeX command in dumping (making format).
% The variable is used to distingush W32TeX from TeX Live
%
jtex_filetype = sjis

%
% Default pTeX Kanji encoding
% It is not used. If it is necessary, define it by an ENV variable.
% PTEX_KANJI_ENC = sjis
%

% What MetaPost runs to make MPX files.  This is passed an option -troff
% if MP is in troff mode.
%
% new mpost (1.091 or later) does not need makempx
%
% MPXCOMMAND = makempx
% MPXCOMMAND.pmetapost = pmakempx
% MPXCOMMAND.upmetapost = upmakempx
%

% The default `codepage and sort order' file for BibTeX8, when none is
% given as command line option or environment variable.
BIBTEX_CSFILE = 88591lat.csf

% This variable is specific to Windows.  It must be set to 0 or 1.  The
% default is 0.  Setting it to 1 tells the Windows script wrappers to
% use an already installed Perl interpreter if one is found on the
% search path, in preference to the Perl shipped with TeX Live.  Thus,
% it may be useful if you both (a) installed a full Perl distribution
% for general use, and (b) need to run Perl programs from TL that use
% additional modules we don't provide.  The TL Perl does provide all the
% standard Perl modules.
%
% TEXLIVE_WINDOWS_TRY_EXTERNAL_PERL = 0

%  Part 3: Array and other sizes for TeX (and Metafont).
%
% If you want to change some of these sizes only for a certain TeX
% variant, the usual dot notation works, e.g.,
% main_memory.hugetex = 20000000
%
% If a change here appears to be ignored, try redumping the format file.

% Memory. Must be less than 8,000,000 total.
%
% main_memory is relevant only to initex, extra_mem_* only to non-ini.
% Thus, have to redump the .fmt file after changing main_memory; to add
% to existing fmt files, increase extra_mem_*.  (To get an idea of how
% much, try \tracingstats=2 in your TeX source file;
% web2c/tests/memtest.tex might also be interesting.)
%
% To increase space for boxes (as might be needed by, e.g., PiCTeX),
% increase extra_mem_bot.
%
% For some xy-pic samples, you may need as much as 700000 words of memory.
% For the vast majority of documents, 60000 or less will do.
%
main_memory = 5000000 % words of inimemory available; also applies to inimf&mp
extra_mem_top = 0     % extra high memory for chars, tokens, etc.
extra_mem_bot = 0     % extra low memory for boxes, glue, breakpoints, etc.

% ConTeXt needs lots of memory.
extra_mem_top.context = 2000000
extra_mem_bot.context = 4000000
main_memory.context = 4000000
hyph_size.context = 15573

% omega
main_memory.omega = 8000000
main_memory.lambda = 8000000
main_memory.omegaj = 8000000
main_memory.lambdaj = 8000000
main_memory.aleph = 8000000
main_memory.lamed = 8000000

% Words of font info for TeX (total size of all TFM files, approximately).
% Must be >= 20000 and <= 147483647 (without tex.ch changes).
font_mem_size = 8000000

% Total number of fonts. Must be >= 50 and <= 9000 (without tex.ch changes).
font_max = 9000

% Extra space for the hash table of control sequences.
hash_extra = 600000

% Max number of characters in all strings, including all error messages,
% help texts, font names, control sequences.  These values apply to TeX.
pool_size = 6250000

% Minimum pool space after TeX's own strings; must be at least
% 25000 less than pool_size, but doesn't need to be nearly that large.
string_vacancies = 90000

% Maximum number of strings.
max_strings = 500000

% min pool space left after loading .fmt
pool_free = 47500

% Buffer size.  TeX uses the buffer to contain input lines, but macro
% expansion works by writing material into the buffer and reparsing the
% line.  As a consequence, certain constructs require the buffer to be
% very large, even though most documents can be handled with a small value.
buf_size = 500000

% Hyphenation trie.  The maximum possible is 4194303 (ssup_trie_size in
% the sources), but we don't need that much.  The value here suffices
% for all known free hyphenation patterns to be loaded simultaneously
% (as TeX Live does).
%
trie_size = 1000000

hyph_size = 8191        % prime number of hyphenation exceptions, >610, <32767.
                        % http://primes.utm.edu/curios/page.php/8191.html
nest_size = 500         % simultaneous semantic levels (e.g., groups)
max_in_open = 15        % simultaneous input files and error insertions, 
                        % also applies to MetaPost
param_size = 10000      % simultaneous macro parameters, also applies to MP
save_size =  100000     % for saving values outside current group
stack_size = 5000       % simultaneous input sources

% These are Omega-specific.
ocp_buf_size = 500000   % character buffers for ocp filters.
ocp_stack_size = 10000  % stacks for ocp computations.
ocp_list_size = 1000    % control for multiple ocps.

% These work best if they are the same as the I/O buffer size, but it
% doesn't matter much.  Must be a multiple of 8.
dvi_buf_size = 16384 % TeX
gf_buf_size = 16384  % MF

% These are pdftex-specific. (ignored in newer pdfTeX)
dest_names_size = 300000
obj_tab_size = 300000
pdf_mem_size = 300000

% It's probably inadvisable to change these. At any rate, we must have:
% 45 < error_line      < 255;
% 30 < half_error_line < error_line - 15;
% 60 <= max_print_line;
% These apply to TeX, Metafont, and MetaPost.
error_line = 79
half_error_line = 50
max_print_line = 79

% Metafont only.
screen_width.mf = 1664
screen_depth.mf = 1200

% BibTeX only (max_strings also determines hash_size and hash_prime).
ent_str_size =  250
glob_str_size = 20000
max_strings.bibtex = 35307
max_strings.bibtex8 = 35307
max_strings.bibtexu = 35307
max_strings.pbibtex = 35307
max_strings.upbibtex = 35307

% GFtype only.
line_length.gftype = 500
max_rows.gftype = 8191
max_cols.gftype = 8191

%
% luaTeX (default 10000) 100 < x < 1000000
%
expand_depth = 20000

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%% W32TeX specials %%%%%%%%%%%%%%%%%%%%%%%
%
% fontconfig variables
%
FONTCONFIG_FILE = fonts.conf
FONTCONFIG_PATH = $TEXMFMAIN/fonts/conf
FC_CACHEDIR = $TEXMFMAIN/fonts/cache

%
% vfontcap full path ( for dvipsv and dvi2ps)
VFONTCAP = $TEXMFMAIN/dvips/vfontcap

%
% for mktexpk
%
% -----------------------------------------
% MAKETEXPK_STYLE = dosnames
MAKETEXPK_STYLE =

% -----------------------------------------
% MAKETEXPK_TOP_DIR = f:/PKFONTS
MAKETEXPK_TOP_DIR =

% -----------------------------------------
% MAKETEXPK_MODE = canonex
% -----------------------------------------
%
% modes
%
MAKETEXPK_MODE_44 = fourfour
MAKETEXPK_MODE_70 = datadisc
MAKETEXPK_MODE_72 = mactrue
MAKETEXPK_MODE_78 = vs
MAKETEXPK_MODE_82 = decsmall
MAKETEXPK_MODE_83 = eighthre
MAKETEXPK_MODE_85 = sun
MAKETEXPK_MODE_91 = nineone
MAKETEXPK_MODE_95 = atarinf
MAKETEXPK_MODE_96 = atarins
MAKETEXPK_MODE_100 = amiga
MAKETEXPK_MODE_101 = atariotf
MAKETEXPK_MODE_110 = ibmvga
MAKETEXPK_MODE_118 = pcprevw
MAKETEXPK_MODE_120 = onetz
MAKETEXPK_MODE_144 = iw
MAKETEXPK_MODE_150 = ljlo
MAKETEXPK_MODE_160 = nectzo
MAKETEXPK_MODE_180 = lqlores
MAKETEXPK_MODE_200 = highfax
MAKETEXPK_MODE_240 = canonlbp
MAKETEXPK_MODE_300 = cx
MAKETEXPK_MODE_320 = neclm
MAKETEXPK_MODE_360 = bjtenex
MAKETEXPK_MODE_384 = dover
MAKETEXPK_MODE_400 = nexthi
MAKETEXPK_MODE_406 = agfafzz
MAKETEXPK_MODE_508 = ocessfz
MAKETEXPK_MODE_600 = ljfour
MAKETEXPK_MODE_635 = linolo
MAKETEXPK_MODE_640 = SixFourZero
MAKETEXPK_MODE_720 = esphi
MAKETEXPK_MODE_723 = aps
MAKETEXPK_MODE_800 = lwpro
MAKETEXPK_MODE_1000 = lmaster
MAKETEXPK_MODE_1016 = apssixhi
MAKETEXPK_MODE_1200 = ultre
MAKETEXPK_MODE_1270 = linoone
MAKETEXPK_MODE_1800 = vtftzz
MAKETEXPK_MODE_2400 = supre
MAKETEXPK_MODE_2540 = linotzzh
MAKETEXPK_MODE_3386 = linolttz
MAKETEXPK_MODE_8000 = dpdfezzz
MAKETEXPK_MODE_9600 = ibx

%%-----------------------------------------
% special variables for dvi2ps ( W32TeX )
% -----------------------------------------
DVI2PSPATH = $TEXMFMAIN/dvi2ps
DVI2PSLIB  = $DVI2PSPATH
DVI2PSFONTDESC = fontdesc

%
% special variables for dvi2dvi ( W32TeX )
% -----------------------------------------
DVI2DVIPATH = $TEXMFMAIN/dvi2dvi
DVI2DVILIB = $TEXMFMAIN/dvi2dvi
FONTDESCDVI = fontdesc

%%%%% end of Win32 specials %%%%%
